{"version":3,"file":"datepicker-month-view.js","sourceRoot":"","sources":["../../src/datepicker/datepicker-month-view.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAE,KAAK,EAAe,MAAM,EAAE,YAAY,EAAC,MAAM,eAAe;OAE1E,EAAC,OAAO,EAAC,MAAM,YAAY;OAC3B,EAAC,iBAAiB,EAAC,MAAM,mBAAmB;AAInD;IAWE,gCAAmB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFzC,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;IAEO,CAAC;IAE9C,yCAAQ,GAAR,UAAS,GAAiB;QACxB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,2CAAU,GAAV,UAAW,GAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEvE,2CAAU,GAAV,UAAW,IAAa,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEzF,4CAAW,GAAX,UAAY,GAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAEnH,yCAAQ,GAAR,UAAS,GAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACxG,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,2BAA2B;oBACrC,MAAM,EAAE,CAAC,iWAmBR,CAAC;oBACF,QAAQ,EAAE,o8BAmBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,qCAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,iBAAiB,GAAG;KAC1B,CAAC;IACK,qCAAc,GAA2C;QAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACrC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAC5B,CAAC;IACF,6BAAC;AAAD,CAAC,AArFD,IAqFC","sourcesContent":["import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\r\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\n\r\n\r\nexport class NgbDatepickerMonthView {\r\n   dayTemplate: TemplateRef<DayTemplateContext>;\r\n   disabled: boolean;\r\n   month: MonthViewModel;\r\n   outsideDays: 'visible' | 'hidden' | 'collapsed';\r\n   selectedDate: NgbDate;\r\n   showWeekdays;\r\n   showWeekNumbers;\r\n\r\n   select = new EventEmitter<NgbDate>();\r\n\r\n  constructor(public i18n: NgbDatepickerI18n) {}\r\n\r\n  doSelect(day: DayViewModel) {\r\n    if (!this.isDisabled(day) && !this.isCollapsed(day) && !this.isHidden(day)) {\r\n      this.select.emit(NgbDate.from(day.date));\r\n    }\r\n  }\r\n\r\n  isDisabled(day: DayViewModel) { return this.disabled || day.disabled; }\r\n\r\n  isSelected(date: NgbDate) { return this.selectedDate && this.selectedDate.equals(date); }\r\n\r\n  isCollapsed(day: DayViewModel) { return this.outsideDays === 'collapsed' && this.month.number !== day.date.month; }\r\n\r\n  isHidden(day: DayViewModel) { return this.outsideDays === 'hidden' && this.month.number !== day.date.month; }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'ngb-datepicker-month-view',\r\n  styles: [`\r\n    .weekday {\r\n    }\r\n    .weeknumber {\r\n    }\r\n    .day {\r\n      padding: 0;\r\n      height: 100%;\r\n      cursor: pointer;\r\n    }\r\n    .day.disabled, .day.hidden, .day.collapsed {\r\n      cursor: default;\r\n    }\r\n    :host/deep/.day.collapsed > * {\r\n      display: none;\r\n    }\r\n    :host/deep/.day.hidden > * {\r\n      visibility: hidden;\r\n    }\r\n  `],\r\n  template: `\r\n    <table>\r\n      <tr *ngIf=\"showWeekdays\">\r\n        <td *ngIf=\"showWeekNumbers\"></td>\r\n        <td *ngFor=\"let w of month.weekdays\" class=\"weekday text-xs-center font-weight-bold\">{{ i18n.getWeekdayName(w) }}</td>\r\n      </tr>\r\n      <tr *ngFor=\"let week of month.weeks\">\r\n        <td *ngIf=\"showWeekNumbers\" class=\"weeknumber small text-xs-center\">{{ week.number }}</td>\r\n        <td *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"day\" [class.disabled]=\"isDisabled(day)\"\r\n        [class.collapsed]=\"isCollapsed(day)\" [class.hidden]=\"isHidden(day)\">\r\n            <template [ngTemplateOutlet]=\"dayTemplate\"\r\n            [ngOutletContext]=\"{date: {year: day.date.year, month: day.date.month, day: day.date.day},\r\n              currentMonth: month.number,\r\n              disabled: isDisabled(day),\r\n              selected: isSelected(day.date)}\">\r\n            </template>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: NgbDatepickerI18n, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayTemplate': [{ type: Input },],\n'disabled': [{ type: Input },],\n'month': [{ type: Input },],\n'outsideDays': [{ type: Input },],\n'selectedDate': [{ type: Input },],\n'showWeekdays': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'select': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}