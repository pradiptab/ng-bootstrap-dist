{"version":3,"file":"typeahead.js","sourceRoot":"","sources":["../../src/typeahead/typeahead.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Directive,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ComponentRef,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  Injector,\r\n  Renderer,\r\n  ElementRef,\r\n  TemplateRef,\r\n  forwardRef,\r\n  OnDestroy,\r\n  NgZone\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/let';\r\nimport {positionElements} from '../util/positioning';\r\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\r\nimport {PopupService} from '../util/popup';\r\nimport {toString, isDefined} from '../util/util';\r\nimport {NgbTypeaheadConfig} from './typeahead-config';\r\n\r\nenum Key {\r\n  Tab = 9,\r\n  Enter = 13,\r\n  Escape = 27,\r\n  ArrowUp = 38,\r\n  ArrowDown = 40\r\n}\r\n\r\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbTypeahead),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Payload of the selectItem event.\r\n */\r\nexport interface NgbTypeaheadSelectItemEvent {\r\n  /**\r\n   * An item about to be selected\r\n   */\r\n  item: any;\r\n\r\n  /**\r\n   * Function that will prevent item selection if called\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\r\n */\r\n\r\nexport class NgbTypeahead implements ControlValueAccessor,\r\n    OnInit, OnDestroy {\r\n  private _popupService: PopupService<NgbTypeaheadWindow>;\r\n  private _subscription: Subscription;\r\n  private _userInput: string;\r\n  private _valueChanges: Observable<string>;\r\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\r\n  private _zoneSubscription: any;\r\n\r\n\r\n  /**\r\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\r\n   */\r\n   editable: boolean;\r\n\r\n  /**\r\n   * A flag indicating if the first match should automatically be focused as you type.\r\n   */\r\n   focusFirst: boolean;\r\n\r\n  /**\r\n   * A function to convert a given value into string to display in the input field\r\n   */\r\n   inputFormatter: (value: any) => string;\r\n\r\n  /**\r\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\r\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\r\n   */\r\n   ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\r\n\r\n  /**\r\n   * A function to format a given result before display. This function should return a formatted string without any\r\n   * HTML markup\r\n   */\r\n   resultFormatter: (value: any) => string;\r\n\r\n  /**\r\n   * A template to override a matching result default display\r\n   */\r\n   resultTemplate: TemplateRef<ResultTemplateContext>;\r\n\r\n  /**\r\n   * Show hint when an option in the result list matches.\r\n   */\r\n   showHint: boolean;\r\n\r\n  /**\r\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\r\n   */\r\n   selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\r\n\r\n  private _onTouched = () => {};\r\n  private _onChange = (_: any) => {};\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef, private _viewContainerRef: ViewContainerRef, private _renderer: Renderer,\r\n      private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver, config: NgbTypeaheadConfig,\r\n      ngZone: NgZone) {\r\n    this.editable = config.editable;\r\n    this.focusFirst = config.focusFirst;\r\n    this.showHint = config.showHint;\r\n\r\n    this._valueChanges = Observable.fromEvent(_elementRef.nativeElement, 'input', ($event) => $event.target.value);\r\n\r\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\r\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\r\n\r\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\r\n      if (this._windowRef) {\r\n        positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, 'bottom-left');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._subscription = this._subscribeToUserInput(\r\n        this._valueChanges\r\n            .do(value => {\r\n              this._userInput = value;\r\n              if (this.editable) {\r\n                this._onChange(value);\r\n              }\r\n            })\r\n            .let (this.ngbTypeahead)\r\n            .do(_ => {\r\n              if (!this.editable) {\r\n                this._onChange(undefined);\r\n              }\r\n            }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribeFromUserInput();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\r\n\r\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  dismissPopup() {\r\n    if (this.isPopupOpen()) {\r\n      this._closePopup();\r\n      this._writeInputValue(this._userInput);\r\n    }\r\n  }\r\n\r\n  isPopupOpen() { return this._windowRef != null; }\r\n\r\n  handleBlur() { this._onTouched(); }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (!this._windowRef) {\r\n      return;\r\n    }\r\n\r\n    if (Key[toString(event.which)]) {\r\n      switch (event.which) {\r\n        case Key.ArrowDown:\r\n          event.preventDefault();\r\n          this._windowRef.instance.next();\r\n          this._showHint();\r\n          break;\r\n        case Key.ArrowUp:\r\n          event.preventDefault();\r\n          this._windowRef.instance.prev();\r\n          this._showHint();\r\n          break;\r\n        case Key.Enter:\r\n        case Key.Tab:\r\n          const result = this._windowRef.instance.getActive();\r\n          if (isDefined(result)) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this._selectResult(result);\r\n          }\r\n          this._closePopup();\r\n          break;\r\n        case Key.Escape:\r\n          event.preventDefault();\r\n          this.dismissPopup();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _openPopup() {\r\n    if (!this._windowRef) {\r\n      this._windowRef = this._popupService.open();\r\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\r\n    }\r\n  }\r\n\r\n  private _closePopup() {\r\n    this._popupService.close();\r\n    this._windowRef = null;\r\n  }\r\n\r\n  private _selectResult(result: any) {\r\n    let defaultPrevented = false;\r\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\r\n\r\n    if (!defaultPrevented) {\r\n      this.writeValue(result);\r\n      this._onChange(result);\r\n    }\r\n  }\r\n\r\n  private _selectResultClosePopup(result: any) {\r\n    this._selectResult(result);\r\n    this._closePopup();\r\n  }\r\n\r\n  private _showHint() {\r\n    if (this.showHint) {\r\n      const userInputLowerCase = this._userInput.toLowerCase();\r\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\r\n\r\n      if (userInputLowerCase === formattedVal.substr(0, this._userInput.length).toLowerCase()) {\r\n        this._writeInputValue(this._userInput + formattedVal.substr(this._userInput.length));\r\n        this._renderer.invokeElementMethod(\r\n            this._elementRef.nativeElement, 'setSelectionRange', [this._userInput.length, formattedVal.length]);\r\n      } else {\r\n        this.writeValue(this._windowRef.instance.getActive());\r\n      }\r\n    }\r\n  }\r\n\r\n  private _formatItemForInput(item: any): string {\r\n    return item && this.inputFormatter ? this.inputFormatter(item) : toString(item);\r\n  }\r\n\r\n  private _writeInputValue(value: string): void {\r\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', value);\r\n  }\r\n\r\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\r\n    return userInput$.subscribe((results) => {\r\n      if (!results || results.length === 0) {\r\n        this._closePopup();\r\n      } else {\r\n        this._openPopup();\r\n        this._windowRef.instance.focusFirst = this.focusFirst;\r\n        this._windowRef.instance.results = results;\r\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\r\n        if (this.resultFormatter) {\r\n          this._windowRef.instance.formatter = this.resultFormatter;\r\n        }\r\n        if (this.resultTemplate) {\r\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\r\n        }\r\n        this._showHint();\r\n\r\n        // The observable stream we are subscribing to might have async steps\r\n        // and if a component containing typeahead is using the OnPush strategy\r\n        // the change detection turn wouldn't be invoked automatically.\r\n        this._windowRef.changeDetectorRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  private _unsubscribeFromUserInput() {\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n    this._subscription = null;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: 'input[ngbTypeahead]',\r\n  host: {\r\n    '(blur)': 'handleBlur()',\r\n    '[class.open]': 'isPopupOpen()',\r\n    '(document:click)': 'dismissPopup()',\r\n    '(keydown)': 'handleKeyDown($event)',\r\n    'autocomplete': 'off',\r\n    'autocapitalize': 'off',\r\n    'autocorrect': 'off'\r\n  },\r\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: NgbTypeaheadConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'editable': [{ type: Input },],\n'focusFirst': [{ type: Input },],\n'inputFormatter': [{ type: Input },],\n'ngbTypeahead': [{ type: Input },],\n'resultFormatter': [{ type: Input },],\n'resultTemplate': [{ type: Input },],\n'showHint': [{ type: Input },],\n'selectItem': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}