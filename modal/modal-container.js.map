{"version":3,"file":"modal-container.js","sourceRoot":"","sources":["../../src/modal/modal-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Directive,\r\n  Injector,\r\n  ReflectiveInjector,\r\n  Renderer,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  ComponentFactory,\r\n  ComponentRef\r\n} from '@angular/core';\r\n\r\nimport {isDefined, isString} from '../util/util';\r\nimport {ContentRef} from '../util/popup';\r\n\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbModalWindow} from './modal-window';\r\nimport {NgbModalStack} from './modal-stack';\r\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\r\n\r\n\r\nexport class NgbModalContainer {\r\n  private _backdropFactory: ComponentFactory<NgbModalBackdrop>;\r\n  private _windowFactory: ComponentFactory<NgbModalWindow>;\r\n\r\n  constructor(\r\n      private _injector: Injector, private _renderer: Renderer, private _viewContainerRef: ViewContainerRef,\r\n      private _componentFactoryResolver: ComponentFactoryResolver, ngbModalStack: NgbModalStack) {\r\n    this._backdropFactory = _componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\r\n    this._windowFactory = _componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\r\n\r\n    ngbModalStack.registerContainer(this);\r\n  }\r\n\r\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: string | TemplateRef<any>, options):\r\n      NgbModalRef {\r\n    const activeModal = new NgbActiveModal();\r\n    const contentRef = this._getContentRef(moduleCFR, contentInjector, content, activeModal);\r\n    let windowCmptRef: ComponentRef<NgbModalWindow>;\r\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop>;\r\n    let ngbModalRef: NgbModalRef;\r\n\r\n    if (options.backdrop !== false) {\r\n      backdropCmptRef = this._viewContainerRef.createComponent(this._backdropFactory, 0, this._injector);\r\n    }\r\n\r\n    windowCmptRef = this._viewContainerRef.createComponent(\r\n        this._windowFactory, this._viewContainerRef.length - 1, this._injector, contentRef.nodes);\r\n\r\n    ngbModalRef = new NgbModalRef(this._viewContainerRef, windowCmptRef, contentRef, backdropCmptRef);\r\n\r\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\r\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\r\n\r\n    this._applyWindowOptions(windowCmptRef.instance, options);\r\n\r\n    return ngbModalRef;\r\n  }\r\n\r\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\r\n    ['backdrop', 'keyboard', 'size', 'windowClass'].forEach((optionName: string) => {\r\n      if (isDefined(options[optionName])) {\r\n        windowInstance[optionName] = options[optionName];\r\n      }\r\n    });\r\n  }\r\n\r\n  private _getContentRef(\r\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\r\n      context: NgbActiveModal): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    } else if (content instanceof TemplateRef) {\r\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<NgbActiveModal>>content, context);\r\n      return new ContentRef([viewRef.rootNodes], viewRef);\r\n    } else if (isString(content)) {\r\n      return new ContentRef([[this._renderer.createText(null, `${content}`)]]);\r\n    } else {\r\n      const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\r\n      const modalContentInjector =\r\n          ReflectiveInjector.resolveAndCreate([{provide: NgbActiveModal, useValue: context}], contentInjector);\r\n      const componentRef = this._viewContainerRef.createComponent(contentCmptFactory, 0, modalContentInjector);\r\n      return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'template[ngbModalContainer]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Injector, },\n{type: Renderer, },\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: NgbModalStack, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}